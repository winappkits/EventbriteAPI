
    
    <common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="APIMASH_Eventbrite_Win8.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:APIMASH_Eventbrite_Win8"
    xmlns:common="using:APIMASH_Eventbrite_Win8.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:APIMASH_Eventbrite_Win8.Data"
    mc:Ignorable="d"
    >

    <Page.Resources>
        <common:HtmltoTextConverter x:Key="HtmlToTextConverter" />       
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid Background="{StaticResource FlipViewButtonPointerOverBackgroundThemeBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Button x:Name="backButton" 
				Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Grid.Column="1" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"/>
            <Rectangle Fill="{StaticResource EventbriteHeaderBackgroundBrush}" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="50" Margin="95,115,0,-25" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" d:LayoutRounding="Auto" Grid.ColumnSpan="2">
                <Rectangle.RenderTransform>
                    <CompositeTransform Rotation="45"/>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>

        <!-- Horizontal scrolling grid used in most view states -->
        <Grid Name="mainPageGridView" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="240"/>
            </Grid.RowDefinitions>

        <FlipView
            x:Name="flipViewEvents"
            AutomationProperties.AutomationId="ItemsFlipView"
            AutomationProperties.Name="Item Details"
            TabIndex="1"            
            ItemsSource="{Binding EventsInCategory}">

                <FlipView.ItemContainerStyle>
                    <Style TargetType="FlipViewItem">
                        <Setter Property="Margin" Value="0,40"/>
                    </Style>
                </FlipView.ItemContainerStyle>

                <FlipView.ItemTemplate>
                    <DataTemplate>

                        <!--
                        UserControl chosen as the templated item because it supports visual state management
                        Loaded/unloaded events explicitly subscribe to view state updates from the page
                    -->
                        <UserControl Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates">
                            <ScrollViewer x:Name="scrollViewer" Style="{StaticResource HorizontalScrollViewerStyle}" Grid.Row="1" Margin="0" Padding="0,0,0,50" >

                                <!-- Content is allowed to flow across as many columns as needed -->
                                <common:RichTextColumns x:Name="richTextColumns" Margin="120,0">
                                    <RichTextBlock x:Name="richTextBlock" Width="560" Style="{StaticResource ItemRichTextStyle}" IsTextSelectionEnabled="False">
                                        <Paragraph>
                                            <Run FontSize="26.667" FontWeight="Light" Text="{Binding Name}"/>
                                            <LineBreak/>
                                            <LineBreak/>
                                            <Run FontWeight="Normal" Text="{Binding StartDateFormatted}"/>
                                        </Paragraph>
                                        <Paragraph LineStackingStrategy="MaxHeight">
                                            <InlineUIContainer>
                                                <Image x:Name="image" MaxHeight="480" Margin="0,20,0,10" Stretch="Uniform" Source="{Binding LogoUrl}" AutomationProperties.Name="{Binding Name}"/>
                                            </InlineUIContainer>
                                        </Paragraph>
                                        <Paragraph>                                            
                                            <Run FontWeight="SemiLight" Text="{Binding Description, Converter={StaticResource HtmlToTextConverter}}"/>
                                            <LineBreak/>
                                            <LineBreak/>
                                            <InlineUIContainer>
                                                <HyperlinkButton NavigateUri="{Binding EventUrl}"  Content="More Info..."  />
                                            </InlineUIContainer>
                                        </Paragraph>
                                    </RichTextBlock>
                                    

                                    <!-- Additional columns are created from this template -->
                                    <common:RichTextColumns.ColumnTemplate>
                                        <DataTemplate>
                                            <RichTextBlockOverflow Width="560" Margin="20,40,20,0">
                                                <RichTextBlockOverflow.RenderTransform>
                                                    <TranslateTransform X="-1" Y="4"/>
                                                </RichTextBlockOverflow.RenderTransform>
                                            </RichTextBlockOverflow>
                                        </DataTemplate>
                                    </common:RichTextColumns.ColumnTemplate>
                                </common:RichTextColumns>

                                <VisualStateManager.VisualStateGroups>

                                    <!-- Visual states reflect the application's view state inside the FlipView -->
                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                        <VisualState x:Name="FullScreenLandscape"/>
                                        <VisualState x:Name="Filled"/>

                                        <!-- Respect the narrower 100-pixel margin convention for portrait -->
                                        <VisualState x:Name="FullScreenPortrait">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="97,0,87,57"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="MaxHeight">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="400"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <!-- When snapped, the content is reformatted and scrolls vertically -->
                                        <VisualState x:Name="Snapped">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="17,0,17,57"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Style">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VerticalScrollViewerStyle}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextBlock" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="280"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="MaxHeight">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="160"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ScrollViewer>
                        </UserControl>
                    </DataTemplate>
                </FlipView.ItemTemplate>
            </FlipView>



            <!--Category Selector-->
            <ListView 
				Grid.Row="1"                      		
                ItemsSource="{Binding EventCategories}"
    			ItemTemplate="{StaticResource EventCategoryTemplate}"
    			VerticalAlignment="Top"
    			x:Name="lstCategories"
    			ScrollViewer.HorizontalScrollBarVisibility="Auto"
    			ScrollViewer.VerticalScrollBarVisibility="Disabled"
    			ScrollViewer.HorizontalScrollMode="Enabled"
    			ScrollViewer.VerticalScrollMode="Disabled"
    			ScrollViewer.ZoomMode="Disabled"
    			SelectionMode="None" 
                IsSwipeEnabled="false"
				IsItemClickEnabled="True"
                Margin="120,0" Height="180" 
    			ItemsPanel="{StaticResource EventbriteEventTemplate}" 
                ItemClick="lstCategories_ItemClick"                
    			Background="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}" Padding="12,0,0,10"				
				 />
        </Grid>

        <!-- Vertical scrolling list only used when snapped -->
        <ListView
            x:Name="categoriesSnappedListView"
            AutomationProperties.AutomationId="categoriesListView"
            AutomationProperties.Name="Category Items"
            Grid.Row="1"
            Visibility="Collapsed"
            Margin="0,40,0,0"
            Padding="10,0,0,60"
            ItemsSource="{Binding EventCategories}"                        
            SelectionMode="None"
            IsItemClickEnabled="False"  
			         
            IsSwipeEnabled="false" FontFamily="Global User Interface" ItemContainerStyle="{StaticResource EventCategoryListSnappedItemPanelStyle}" >
        	<ListView.GroupStyle>
        		<GroupStyle HeaderTemplate="{StaticResource EventCategorySnappedHeaderStyle}"/>
        			<!--
					<GroupStyle.ContainerStyle>
        				<Style TargetType="GroupItem">
        					<Setter Property="Template">
        						<Setter.Value>
        							<ControlTemplate TargetType="GroupItem">
        								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
        									<Grid>
        										<Grid.RowDefinitions>
        											<RowDefinition Height="Auto"/>
        											<RowDefinition Height="*"/>
        										</Grid.RowDefinitions>
        										<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
        										<ItemsControl x:Name="ItemsControl" ItemsSource="{Binding GroupItems}" Grid.Row="1"/>
        									</Grid>
        								</Border>
        							</ControlTemplate>
        						</Setter.Value>
        					</Setter>
        				</Style>
        			</GroupStyle.ContainerStyle>
        			<GroupStyle.Panel>
        				<ItemsPanelTemplate>
        					<VariableSizedWrapGrid/>
        				</ItemsPanelTemplate>
        			</GroupStyle.Panel>
        		</GroupStyle>
				-->
        	</ListView.GroupStyle>
            
            
            <ListView.ItemTemplate>
                <DataTemplate>      
                    <StackPanel Margin="0,20,0,0">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                            <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                        </StackPanel>
                        <ItemsControl ItemsSource="{Binding EventsInCategory}" Margin="0,10,0,0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                <HyperlinkButton Content="{Binding Name}" NavigateUri="{Binding EventUrl}" HorizontalAlignment="Left" />                                
                                <TextBlock Text="{Binding StartDateFormatted}" Margin="0,20"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,137,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="categoriesSnappedListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPageGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
